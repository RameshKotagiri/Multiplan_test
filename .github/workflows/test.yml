echo "üë• Creating team: $TEAM_NAME"
team_response=$(curl -s -w "\n%{http_code}" --request POST \
  --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/teams" \
  --header "Authorization: Bearer $TFC_TOKEN" \
  --header "Content-Type: application/vnd.api+json" \
  --data "{
    \"data\": {
      \"type\": \"teams\",
      \"attributes\": {
        \"name\": \"$TEAM_NAME\"
      }
    }
  }")

# Split response and HTTP status code
http_code=$(echo "$team_response" | tail -n1)
response_body=$(echo "$team_response" | sed -e '$d')

echo "üì¶ Raw team creation response (HTTP Status: $http_code):"
echo "$response_body"

team_id=$(echo "$response_body" | jq -r '.data.id')

if [[ "$team_id" == "null" || -z "$team_id" ]]; then
  # Extract error message if present
  error_message=$(echo "$response_body" | jq -r '.errors[]?.detail // "Unknown error"')
  echo "‚ö†Ô∏è Team creation failed. Error: $error_message"
  
  echo "üîç Trying to look up existing team..."
  team_id=$(curl -s --request GET \
    --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/teams" \
    --header "Authorization: Bearer $TFC_TOKEN" \
    --header "Content-Type: application/vnd.api+json" | jq -r \
    --arg tname "$TEAM_NAME" '.data[] | select(.attributes.name == $tname) | .id')

  if [[ -z "$team_id" ]]; then
    echo "‚ùå Team does not exist and could not be created. Full error response:"
    echo "$response_body"
    exit 1
  else
    echo "‚úÖ Team already existed. ID: $team_id"
  fi
else
  echo "‚úÖ Team created with ID: $team_id"
fi
