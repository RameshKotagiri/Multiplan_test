name: Create TFC Project and Workspaces

on:
  workflow_dispatch:  # Manual trigger

jobs:
  create-resources:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Create Project and Workspaces
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
          TFC_ORG: ${{ secrets.TFC_ORG }}
          PROJECT_NAME: sample-project-api
          WORKSPACES: 'dev,qa,prod'  # Comma-separated workspace names
        run: |
          echo "üîß Creating Project: $PROJECT_NAME"

          project_response=$(curl -s --request POST \
            --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/projects" \
            --header "Authorization: Bearer $TFC_TOKEN" \
            --header "Content-Type: application/vnd.api+json" \
            --data "{
              \"data\": {
                \"type\": \"projects\",
                \"attributes\": {
                  \"name\": \"$PROJECT_NAME\"
                }
              }
            }")

          echo "$project_response" | jq .

          project_id=$(echo "$project_response" | jq -r '.data.id')

          if [[ "$project_id" == "null" ]]; then
            echo "‚ùå Project creation failed."
            exit 1
          fi

          echo "‚úÖ Project created with ID: $project_id"

          IFS=',' read -ra workspace_names <<< "$WORKSPACES"

          for workspace in "${workspace_names[@]}"; do
            echo "üîß Creating workspace: $workspace"

            workspace_response=$(curl -s --request POST \
              --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/workspaces" \
              --header "Authorization: Bearer $TFC_TOKEN" \
              --header "Content-Type: application/vnd.api+json" \
              --data "{
                \"data\": {
                  \"type\": \"workspaces\",
                  \"attributes\": {
                    \"name\": \"$workspace\"
                  },
                  \"relationships\": {
                    \"project\": {
                      \"data\": {
                        \"id\": \"$project_id\",
                        \"type\": \"projects\"
                      }
                    }
                  }
                }
              }")

            echo "$workspace_response" | jq .

            workspace_id=$(echo "$workspace_response" | jq -r '.data.id')

            if [[ "$workspace_id" == "null" ]]; then
              echo "‚ùå Workspace $workspace creation failed."
            else
              echo "‚úÖ Workspace $workspace created with ID: $workspace_id"
            fi
          done
