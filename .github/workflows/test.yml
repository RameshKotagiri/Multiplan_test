# Check if project exists
echo "Checking if project already exists..."
existing_project_id=$(curl -s --request GET \
  --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/projects" \
  --header "Authorization: Bearer $TFC_TOKEN" \
  --header "Content-Type: application/vnd.api+json" | jq -r \
  --arg pname "$PROJECT_NAME" '.data[] | select(.attributes.name == $pname) | .id')

if [[ -n "$existing_project_id" ]]; then
  echo "Project '$PROJECT_NAME' already exists. Reusing it."
  project_id="$existing_project_id"
else
  echo "Creating project: $PROJECT_NAME"
  project_response=$(curl -s --request POST \
    --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/projects" \
    --header "Authorization: Bearer $TFC_TOKEN" \
    --header "Content-Type: application/vnd.api+json" \
    --data "{
      \"data\": {
        \"type\": \"projects\",
        \"attributes\": {
          \"name\": \"$PROJECT_NAME\"
        }
      }
    }")
  project_id=$(echo "$project_response" | jq -r '.data.id')
  echo "Project created with ID: $project_id"
fi

# Fetch all existing workspaces
echo "Fetching existing workspaces..."
existing_workspaces=$(curl -s --request GET \
  --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/workspaces" \
  --header "Authorization: Bearer $TFC_TOKEN" \
  --header "Content-Type: application/vnd.api+json")

IFS=',' read -ra ENV_LIST <<< "$ENVS"
declare -a WORKSPACE_IDS=()

for ENV in "${ENV_LIST[@]}"; do
  WORKSPACE_NAME="oci-${SYSTEM}-${APP}-${ENV}-${ITERATION}"

  # Check if workspace already exists
  exists=$(echo "$existing_workspaces" | jq -r --arg wname "$WORKSPACE_NAME" '.data[] | select(.attributes.name == $wname) | .id')
  if [[ -n "$exists" ]]; then
    echo "Workspace $WORKSPACE_NAME already exists. Skipping creation."
    WORKSPACE_IDS+=("$exists")
    continue
  fi

  echo "Creating workspace: $WORKSPACE_NAME"
  workspace_response=$(curl -s --request POST \
    --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/workspaces" \
    --header "Authorization: Bearer $TFC_TOKEN" \
    --header "Content-Type: application/vnd.api+json" \
    --data "{
      \"data\": {
        \"type\": \"workspaces\",
        \"attributes\": {
          \"name\": \"$WORKSPACE_NAME\"
        },
        \"relationships\": {
          \"project\": {
            \"data\": {
              \"id\": \"$project_id\",
              \"type\": \"projects\"
            }
          }
        }
      }
    }")

  ws_id=$(echo "$workspace_response" | jq -r '.data.id')
  echo "Workspace created: $WORKSPACE_NAME (ID: $ws_id)"
  WORKSPACE_IDS+=("$ws_id")
done
