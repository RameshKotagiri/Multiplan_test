# Terraform Cloud Project & Workspace Automation

This repository automates the creation and deletion of Terraform Cloud (TFC) **projects**, **workspaces**, and **team assignments** using GitHub Actions.

---

## üìå Features

- üîß **Create Project & Workspaces**
  - Supports dynamic naming conventions.
  - Allows creating one or more workspaces under a project.
  - Accepts optional `workspace_usage` labels for custom naming.
  - Associates team with project and maps SSO group ID.
  - Optionally reuses an existing project or team.

- üßπ **Delete Project/Workspace/Team**
  - Deletes a full project along with its workspaces.
  - Allows selective workspace deletion within a project.
  - Optionally deletes the assigned team.

---

## üöÄ How to Use

### ‚ûï Create Project & Workspaces

Trigger the workflow **`Create TFC Project, Workspaces and Assign Team Access`** manually via GitHub Actions.

#### Inputs:
| Name               | Description                                                 | Required | Example                       |
|--------------------|-------------------------------------------------------------|----------|-------------------------------|
| `system`           | System identifier                                           | ‚úÖ       | `enterprise`                  |
| `app`              | Application name                                            | ‚úÖ       | `demo`                        |
| `workspace_count`  | Number of workspaces to create                              | ‚úÖ       | `3`                           |
| `workspace_usage`  | (Optional) Comma-separated usage labels for each workspace | ‚ùå       | `david,shyam,s3`              |
| `team_name`        | TFC team name to create/assign                              | ‚úÖ       | `devops-poc`                  |
| `sso_id`           | Azure AD SSO group ID                                       | ‚úÖ       | `MGSITSOCIAdmins`             |
| `confirm_reuse`    | Type `YES` to reuse existing project if present             | ‚ùå       | `YES`                         |

#### Workspace Naming Logic:
- With `workspace_usage`: `oci-<system>-<app>-<usage>-poc-001`
- Without usage:
  - If 1 workspace: `oci-<system>-<app>-poc-001`
  - If >1 workspace: `oci-<system>-<app>-poc-00X` (iterates by count)

---

### ‚ùå Delete Project / Workspaces / Team

Trigger the workflow **`Delete TFC Project, Workspaces and Team`** manually via GitHub Actions.

#### Inputs:
| Name                 | Description                                                | Required | Example                       |
|----------------------|------------------------------------------------------------|----------|-------------------------------|
| `project_name`       | TFC project name to delete                                 | ‚úÖ       | `oci-enterprise-demo`         |
| `team_name`          | (Optional) TFC team name to delete                         | ‚ùå       | `devops-poc`                  |
| `selected_workspaces`| (Optional) Comma-separated workspace names to delete only | ‚ùå       | `oci-enterprise-demo-david-poc-001` |
| `confirm_delete`     | Type `YES` to confirm deletion                             | ‚úÖ       | `YES`                         |

#### Deletion Logic:
- If `selected_workspaces` is provided, only those workspaces are deleted.
- If not provided, all workspaces under the project are deleted, followed by project and (optional) team.

---

## üîí Secrets Required

| Secret Name      | Description                               |
|------------------|-------------------------------------------|
| `TFC_TOKEN`      | Terraform Cloud API token                 |
| `TFC_ORG`        | Terraform Cloud organization name         |

---

## üìÇ Folder Structure

```bash
.
‚îú‚îÄ‚îÄ .github
‚îÇ   ‚îî‚îÄ‚îÄ workflows
‚îÇ       ‚îú‚îÄ‚îÄ create-project-workspace.yml
‚îÇ       ‚îî‚îÄ‚îÄ delete-project-workspace.yml
‚îú‚îÄ‚îÄ README.md
