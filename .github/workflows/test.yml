name: Delete TFC Team by Name

on:
  workflow_dispatch:
    inputs:
      team_name:
        description: 'Terraform Cloud Team Name'
        required: true
        type: string

jobs:
  delete-team:
    runs-on: arc-runner-set
    steps:
      - name: Delete team by name
        env:
          TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
          TFC_ORG: ${{ secrets.TFC_ORG }}
          TEAM_NAME: ${{ inputs.team_name }}
        run: |
          echo "üîç Looking up team ID for '$TEAM_NAME'..."

          team_id=$(curl -s --request GET \
            --url "https://app.terraform.io/api/v2/organizations/$TFC_ORG/teams" \
            --header "Authorization: Bearer $TFC_TOKEN" \
            --header "Content-Type: application/vnd.api+json" | \
            jq -r --arg tname "$TEAM_NAME" '.data[] | select(.attributes.name == $tname) | .id')

          if [[ -z "$team_id" ]]; then
            echo "‚ùå Team '$TEAM_NAME' not found."
            exit 1
          fi

          echo "üóëÔ∏è Deleting team with ID: $team_id"
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            --request DELETE \
            --url "https://app.terraform.io/api/v2/teams/$team_id" \
            --header "Authorization: Bearer $TFC_TOKEN" \
            --header "Content-Type: application/vnd.api+json")

          if [[ "$response" -eq 204 ]]; then
            echo "‚úÖ Successfully deleted team '$TEAM_NAME' (ID: $team_id)"
          else
            echo "‚ùå Failed to delete team '$TEAM_NAME'. HTTP status: $response"
            exit 1
          fi
